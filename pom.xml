<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>dev.mwhitney</groupId>
  <artifactId>PiPAA</artifactId>
  <version>0.9.5-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Picture-in-Picture Anything Anywhere</name>

  <developers>
    <developer>
      <name>Matt Whitney</name>
      <id>mwhitney57</id>
      <url>https://github.com/mwhitney57</url>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
  </properties>

  <dependencies>
    <!-- GitHub: https://github.com/caprica/vlcj -->
    <dependency>
        <groupId>uk.co.caprica</groupId>
        <artifactId>vlcj</artifactId>
        <version>4.8.3</version>
	</dependency>
	<!-- https://www.slf4j.org/download.html -->
	<dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>2.0.17</version>
    </dependency>
	<!-- This library is for having a modern tray look and feel, compared to the default Java SystemTray which looks a bit dated. -->
	<!-- GitHub: https://github.com/dorkbox/SystemTray -->
	<dependency>
        <groupId>com.dorkbox</groupId>
        <artifactId>SystemTray</artifactId>
        <version>4.4</version>
    </dependency>
    <!-- A solid layout library compatible with Swing. Documentation: http://www.miglayout.com/QuickStart.pdf -->
    <!-- GitHub: https://github.com/mikaelgrev/miglayout -->
    <dependency>
        <groupId>com.miglayout</groupId>
        <artifactId>miglayout-swing</artifactId>
        <version>11.4.2</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
    <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.18.0</version>
    </dependency>
    <!-- GitHub: https://github.com/whois-server-list/public-suffix-list -->
    <dependency>
        <groupId>de.malkusch.whois-server-list</groupId>
        <artifactId>public-suffix-list</artifactId>
        <version>2.2.0</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.json/json -->
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20250107</version>
    </dependency>
  </dependencies>

  <build>
    <!-- Points to custom source location – Default: src/main/java – main/java subfolders are excluded in this project -->
    <sourceDirectory>src</sourceDirectory>
    
    <resources>
      <resource>
        <directory>src</directory>  <!-- Copy all non-Java files from src (resources in package paths) -->
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.6.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <shadedArtifactAttached>true</shadedArtifactAttached>  <!-- Attach instead of replace -->
          <shadedClassifierName>shaded</shadedClassifierName>  <!-- Classifier for attached JAR -->
          <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
              <mainClass>dev.mwhitney.main.Initializer</mainClass>
              <manifestEntries>
                <Main-Class>dev.mwhitney.main.Initializer</Main-Class>
                <Add-VM-Options>-Dsun.java2d.noddraw=true</Add-VM-Options>  <!-- JVM argument(s) baked into JAR -->
              </manifestEntries>
            </transformer>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
          </transformers>
          <filters>
            <!-- Include all project files in JAR -->
              <filter>
                <artifact>${project.groupId}:${project.artifactId}</artifact>
                <includes>
                    <include>**/*</include>  <!-- Select all classes and resources in JAR -->
                </includes>
            </filter>
            <!-- Exclude signature files from dependencies -->
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
      </plugin>
      
      <!-- Parse version for dynamic Launch4j versioning -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.6.1</version>
        <executions>
          <execution>
            <id>parse-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- Launch4j plugin mimicking provided XML config -->
      <plugin>
        <groupId>com.akathist.maven.plugins.launch4j</groupId>
        <artifactId>launch4j-maven-plugin</artifactId>
        <version>2.6.0</version>
        <executions>
          <execution>
            <id>l4j-gui</id>
            <phase>package</phase>
            <goals>
              <goal>launch4j</goal>
            </goals>
            <configuration>
              <dontWrapJar>false</dontWrapJar>
              <headerType>gui</headerType>
              <jar>${project.build.directory}/${project.artifactId}-${project.version}-shaded.jar</jar>
              <outfile>${project.build.directory}/${project.artifactId}.exe</outfile>
              <errTitle></errTitle>
              <cmdLine></cmdLine>
              <chdir>.</chdir>
              <priority>normal</priority>
              <downloadUrl></downloadUrl>
              <supportUrl></supportUrl>
              <stayAlive>false</stayAlive>
              <restartOnCrash>false</restartOnCrash>
              <manifest></manifest>
              <icon>${project.basedir}/icon.ico</icon>
              <singleInstance>
                <mutexName>PiPAA</mutexName>
                <windowTitle>PiPAA</windowTitle>
              </singleInstance>
              <jre>
                <path>%JAVA_HOME%;%JAVA_HOME21%;%PATH%;jre</path>
                <requiresJdk>false</requiresJdk>
                <requires64Bit>true</requires64Bit>
                <minVersion>21</minVersion>
                <maxVersion></maxVersion>
                <opts><opt>-Dsun.java2d.noddraw=true</opt></opts> <!-- Fallback. JAR should ensure this behavior anyway. -->
              </jre>
              <versionInfo>
                <fileVersion>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.0</fileVersion>
                <txtFileVersion>${project.version}</txtFileVersion>
                <fileDescription>Picture-in-Picture Anything Anywhere</fileDescription>
                <copyright>mwhitney57</copyright>
                <productVersion>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.0</productVersion>
                <txtProductVersion>${project.version}</txtProductVersion>
                <productName>Picture-in-Picture Anything Anywhere</productName>
                <companyName></companyName>
                <internalName>PiPAA</internalName>
                <originalFilename>PiPAA.exe</originalFilename>
                <trademarks></trademarks>
                <language>ENGLISH_US</language>
              </versionInfo>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
